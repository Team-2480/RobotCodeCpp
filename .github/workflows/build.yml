# I stole this template from a random team. Shhh

# This is a basic workflow to build robot code.
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch.
on:
  push:
    branches: [ main, qa ]
  pull_request:
    branches: [ main, qa ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # This grabs the WPILib docker container
    container: wpilib/roborio-cross-ubuntu:2025-24.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: ~/.gradle/caches
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    # Cache WPILib toolchain
    - name: Cache WPILib toolchain
      uses: actions/cache@v4
      with:
        path: ~/.wpilib
        key: wpilib-${{ runner.os }}-${{ hashFiles('**/build.gradle', '**/settings.gradle') }}
        restore-keys: |
          wpilib-${{ runner.os }}-

    # Grant execute permission for gradlew
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # # Install the roborio toolchain (if not cached)
    # - name: Install roborio toolchain
    #   run: ./gradlew installRoboRioToolchain

    # Runs a single command using the runners shell
    - name: Compile and run tests on robot code
      run: ./gradlew checkFrcUserProgramLinuxx86-64DebugExecutable

    # Runs a single command using the runners shell
    # - name: Simulate robot code
    #   run: |
    #     set +e
    #     (
    #       timeout --preserve-status 10s ./gradlew simulateJava
    #     )
    #     if [ $? -eq 143 ]; then
    #       echo 'Simulation SUCCESS!'
    #       exit 0
    #     else
    #       echo 'Simulation FAILED!'
    #       exit 1
    #     fi
